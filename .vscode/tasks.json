{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "C/C++: build active file",
            "command": "g++",
            "args": [
                "-D__DEBUG__",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}.out"
            ],
            "windows": {
                "args": [
                    "-D__DEBUG__",
                    "-g",
                    "${file}",
                    "-o",
                    "${fileDirname}\\${fileBasenameNoExtension}.exe"
                ],
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "C/C++: build active file with IO",
            "command": "g++",
            "args": [
                "-D__DEBUG__",
                "-DLOCAL_INPUT=\"\\\"${workspaceFolder}/IO/input.dat\\\"\"",
                "-Wall",
                "-Wextra",
                "-pedantic",
                "-std=c++2a",
                "-Wshadow",
                "-Wformat=2",
                "-Wfloat-equal",
                "-Wconversion",
                "-Wlogical-op",
                "-Wshift-overflow=2",
                "-Wduplicated-cond",
                "-Wcast-qual",
                "-Wcast-align",
                "-D_GLIBCXX_DEBUG",
                "-D_GLIBCXX_DEBUG_PEDANTIC",
                "-D_FORTIFY_SOURCE=2",
                "-fsanitize=address",
                "-fsanitize=undefined",
                "-fno-sanitize-recover",
                "-fstack-protector",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}.out"
            ],
            "windows": {
                "args": [
                    "-D__DEBUG__",
                    "-g",
                    "${file}",
                    "-o",
                    "${fileDirname}\\${fileBasenameNoExtension}.exe"
                ],
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "Rust: build active file",
            "command": "rustc",
            "args": [
                "-g",
                "--emit",
                "link=\"${fileDirname}/${fileBasenameNoExtension}.out\"",
                "${file}"
            ],
            "windows": {
                "args": [
                    "-g",
                    "--emit",
                    "link=\"${fileDirname}\\${fileBasenameNoExtension}.exe\"",
                    "${file}"
                ],
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": "build"
        },
        {
            "type": "shell",
            "label": "Clean junks",
            "command": "./clean_junk.sh",
            "windows": {
                "command": "clean_junk.bat",
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "Stage this file",
            "command": "git",
            "args": [
                "add",
                "${file}"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "Stage and commit this file",
            "command": "git",
            "args": [
                "commit",
                "${file}",
                "-m",
                "\"$(echo ${relativeFileDirname} | cut -d'/' -f1)",
                "${fileBasenameNoExtension}\""
            ],
            "dependsOn": [
                "Stage this file"
            ],
            "group": "build"
        },
        {
            "type": "shell",
            "label": "Delete comments",
            "command": "g++",
            "args": [
                "-fpreprocessed",
                "-dD",
                "-E",
                "${file}",
                ">",
                "${file}_;",
                "tail",
                "-n+2",
                "${file}_",
                ">",
                "${file};",
                "rm",
                "${file}_"
            ],
            "group": "build"
        }
    ]
}